{"ast":null,"code":"var _jsxFileName = \"/Users/keremozsari/Desktop/my-personal/tapu/src/pages/Auth/Signup/index.js\";\n// import {useState} from 'react';\n// import { useFormik } from \"formik\";\n// import * as yup from 'yup';\n// import fetchRegister from '../api';\n// import { useAuth } from './AuthContext';\n// const validation = yup.object().shape({\n//     email: yup.string().email(\"Geçerli bir email girin\").required(\"Zorunlu alan\"),\n//     password: yup.string().min(5, \"Parolanız en az 5 karakter olmalıdır\").required(\"Zorunlu alan\")\n// });\n// function Signup() {\n//     const {login} = useAuth();\n//     const formik = useFormik({\n//         initialValues: {\n//             email: \"\",\n//             password: \"\"\n//         },\n//         validation,\n//         onSubmit: async (values, bag) => {\n//             console.log(values);\n//             // try{\n//             //    const registerResponse = fetchRegister({ email: values.email, password: values.password});\n//             //    console.log(registerResponse);\n//             // }catch(e){\n//             //     bag.setErrors({ general: e.response.data.message })\n//             // }\n//         },\n//     });\n//   return (\n//     <div>\n//         <form onSubmit={formik.handleSubmit}>\n//             <div className=\"d-flex flex-column m-2-1r\">\n//                 {\n//                     formik.errors.general && (\n//                         <div>{formik.errors.general}</div>\n//                     )\n//                 }\n//                 <label htmlFor=\"email\">E-Posta</label>\n//                 <input type=\"text\" placeholder=\"E-Mail\" name=\"email\" className=\"p-15-0 mb-30\" \n//                     onChange={formik.handleChange} \n//                     onBlur={formik.handleBlur} \n//                     value={formik.values.email}\n//                     isinvalid={formik.touched.email && formik.errors.email}\n//                     />\n//                 <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"p-15-0 mb-30\"\n//                     onChange={formik.handleChange} \n//                     onBlur={formik.handleBlur} \n//                     value={formik.values.password}\n//                     isinvalid={formik.touched.password && formik.errors.password}\n//                     />\n//                 <select name=\"locale\" className=\"p-15-0 mb-30\">\n//                     <option value=\"tr\">Türkçe</option>\n//                     <option value=\"ing\">İngilizce</option>\n//                 </select>\n//                 <div className=\"d-flex\">\n//                     <button type='submit' className=\"w-100 m-2-1r p-15-0\">Sign Up</button>\n//                 </div>\n//             </div>\n//         </form>\n//     </div>\n//   )\n// }\n// export default Signup\n// <Formik />\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required(\"Zorunlu alan\"),\n  lastName: Yup.string().required(\"Zorunlu alan\"),\n  email: Yup.string().email('Geçersiz e-mail adresi').required('Zorunlu alan')\n});\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: _ref => {\n      let {\n        handleSubmit,\n        handleChange,\n        values,\n        errors\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"Ad\",\n          onChange: handleChange,\n          values: values.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), errors.firstName && errors.firstName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Soyad\",\n          onChange: handleChange,\n          values: values.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), errors.lastName && errors.lastName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"E-mail\",\n          onChange: handleChange,\n          values: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), errors.email && errors.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Kay\\u0131t Ol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Yup","validationSchema","object","firstName","string","required","lastName","email","Register","values","console","log","handleSubmit","handleChange","errors"],"sources":["/Users/keremozsari/Desktop/my-personal/tapu/src/pages/Auth/Signup/index.js"],"sourcesContent":["// import {useState} from 'react';\n// import { useFormik } from \"formik\";\n// import * as yup from 'yup';\n// import fetchRegister from '../api';\n\n// import { useAuth } from './AuthContext';\n\n// const validation = yup.object().shape({\n//     email: yup.string().email(\"Geçerli bir email girin\").required(\"Zorunlu alan\"),\n//     password: yup.string().min(5, \"Parolanız en az 5 karakter olmalıdır\").required(\"Zorunlu alan\")\n// });\n\n// function Signup() {\n\n//     const {login} = useAuth();\n\n//     const formik = useFormik({\n//         initialValues: {\n//             email: \"\",\n//             password: \"\"\n//         },\n//         validation,\n//         onSubmit: async (values, bag) => {\n//             console.log(values);\n//             // try{\n//             //    const registerResponse = fetchRegister({ email: values.email, password: values.password});\n//             //    console.log(registerResponse);\n//             // }catch(e){\n//             //     bag.setErrors({ general: e.response.data.message })\n//             // }\n//         },\n//     });\n\n//   return (\n//     <div>\n//         <form onSubmit={formik.handleSubmit}>\n//             <div className=\"d-flex flex-column m-2-1r\">\n//                 {\n//                     formik.errors.general && (\n//                         <div>{formik.errors.general}</div>\n//                     )\n//                 }\n//                 <label htmlFor=\"email\">E-Posta</label>\n//                 <input type=\"text\" placeholder=\"E-Mail\" name=\"email\" className=\"p-15-0 mb-30\" \n//                     onChange={formik.handleChange} \n//                     onBlur={formik.handleBlur} \n//                     value={formik.values.email}\n//                     isinvalid={formik.touched.email && formik.errors.email}\n//                     />\n\n//                 <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"p-15-0 mb-30\"\n//                     onChange={formik.handleChange} \n//                     onBlur={formik.handleBlur} \n//                     value={formik.values.password}\n//                     isinvalid={formik.touched.password && formik.errors.password}\n//                     />\n\n//                 <select name=\"locale\" className=\"p-15-0 mb-30\">\n//                     <option value=\"tr\">Türkçe</option>\n//                     <option value=\"ing\">İngilizce</option>\n//                 </select>\n//                 <div className=\"d-flex\">\n//                     <button type='submit' className=\"w-100 m-2-1r p-15-0\">Sign Up</button>\n//                 </div>\n//             </div>\n//         </form>\n//     </div>\n//   )\n// }\n\n// export default Signup\n\n// <Formik />\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n\tfirstName: Yup.string().required(\"Zorunlu alan\"),\n\tlastName: Yup.string().required(\"Zorunlu alan\"),\n\temail: Yup.string().email('Geçersiz e-mail adresi').required('Zorunlu alan'),\n});\n\nconst Register = () => {\n\treturn(\n\t\t<Formik \n\t\t\tinitialValues={{ firstName: '', lastName: '', email: '' }}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={ values => {\n\t\t\t\tconsole.log(values);\n\t\t\t}}\n\t\t>\n\t\t\t{({ handleSubmit, handleChange, values, errors }) => (\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\tplaceholder=\"Ad\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalues={values.firstName}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.firstName && errors.firstName}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\tplaceholder=\"Soyad\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalues={values.lastName}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.lastName && errors.lastName}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalues={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && errors.email}\n\t\t\t\t\t<button type=\"submit\">Kayıt Ol</button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;EACnCC,SAAS,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,cAAtB,CADwB;EAEnCC,QAAQ,EAAEN,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,cAAtB,CAFyB;EAGnCE,KAAK,EAAEP,GAAG,CAACI,MAAJ,GAAaG,KAAb,CAAmB,wBAAnB,EAA6CF,QAA7C,CAAsD,cAAtD;AAH4B,CAAX,CAAzB;;AAMA,MAAMG,QAAQ,GAAG,MAAM;EACtB,oBACC,QAAC,MAAD;IACC,aAAa,EAAE;MAAEL,SAAS,EAAE,EAAb;MAAiBG,QAAQ,EAAE,EAA3B;MAA+BC,KAAK,EAAE;IAAtC,CADhB;IAEC,gBAAgB,EAAEN,gBAFnB;IAGC,QAAQ,EAAGQ,MAAM,IAAI;MACpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACA,CALF;IAAA,UAOE;MAAA,IAAC;QAAEG,YAAF;QAAgBC,YAAhB;QAA8BJ,MAA9B;QAAsCK;MAAtC,CAAD;MAAA,oBACA;QAAM,QAAQ,EAAEF,YAAhB;QAAA,wBACC;UACC,IAAI,EAAC,MADN;UAEC,IAAI,EAAC,WAFN;UAGC,WAAW,EAAC,IAHb;UAIC,QAAQ,EAAEC,YAJX;UAKC,MAAM,EAAEJ,MAAM,CAACN;QALhB;UAAA;UAAA;UAAA;QAAA,QADD,EAQEW,MAAM,CAACX,SAAP,IAAoBW,MAAM,CAACX,SAR7B,eASC;UACC,IAAI,EAAC,MADN;UAEC,IAAI,EAAC,UAFN;UAGC,WAAW,EAAC,OAHb;UAIC,QAAQ,EAAEU,YAJX;UAKC,MAAM,EAAEJ,MAAM,CAACH;QALhB;UAAA;UAAA;UAAA;QAAA,QATD,EAgBEQ,MAAM,CAACR,QAAP,IAAmBQ,MAAM,CAACR,QAhB5B,eAiBC;UACC,IAAI,EAAC,MADN;UAEC,IAAI,EAAC,OAFN;UAGC,WAAW,EAAC,QAHb;UAIC,QAAQ,EAAEO,YAJX;UAKC,MAAM,EAAEJ,MAAM,CAACF;QALhB;UAAA;UAAA;UAAA;QAAA,QAjBD,EAwBEO,MAAM,CAACP,KAAP,IAAgBO,MAAM,CAACP,KAxBzB,eAyBC;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAzBD;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADD;AAuCA,CAxCD;;KAAMC,Q"},"metadata":{},"sourceType":"module"}